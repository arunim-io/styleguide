name: package versioning & publishing

on:
  push:
    branches:
      - master
  workflow_dispatch:

concurrency: ${{ github.workflow }}-${{ github.ref }}

env:
  CI: true
  PNPM_CACHE_FOLDER: .pnpm-store

jobs:
  version:
    name: package versioning
    runs-on: ubuntu-latest
    if: |
      startsWith(github.event.head_commit.message, 'feat') ||
      startsWith(github.event.head_commit.message, 'fix') ||
      startsWith(github.event.head_commit.message, 'revert')
    outputs:
      hasChangesets: ${{ steps.changesets.outputs.hasChangesets }}
    steps:
      - name: checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: setup node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18
      - name: install pnpm
        run: npm i pnpm@latest -g
      - name: setup pnpm config
        run: pnpm config set store-dir $PNPM_CACHE_FOLDER
      - name: install dependencies
        run: pnpm install
      - name: create versions
        id: changesets
        uses: changesets/action@v1
        with:
          commit: 'chore: update versions'
          title: 'chore: update versions'
          version: pnpm changeset version
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  publish:
    name: publish to npm
    runs-on: ubuntu-latest
    needs: version
    if: always() && needs.version.outputs.hasChangesets == 'false'
    steps:
      - name: checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: setup node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18
          cache: 'pnpm'
      - name: install pnpm
        run: npm i pnpm@latest -g
      - name: setup pnpm config
        run: pnpm config set store-dir $PNPM_CACHE_FOLDER
      - name: install dependencies
        run: pnpm install
      - name: publish
        uses: changesets/action@v1
        with:
          publish: pnpm release -r
        env:
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
